syntax = "proto3";

package envoy.type;
import "google/protobuf/struct.proto";

import "gogoproto/gogo.proto";
import "extproto/ext.proto";
option (extproto.hash_all) = true;

option go_package = "api";


// proto object to test all base objects
message Simple {
    string str = 1;
    bytes byt = 2;
    uint32 testUint32 = 3;
    uint64 testUint64 = 4;
    bool testBool = 5;
    double doubleTest = 6;
    float floatTest = 7;
    int32 int32Test = 8;
    int64 int64Test = 9;
    sint32 sint32Test = 10;
    sint64 sint64Test = 11;
    fixed32 fixed32Test = 12;
    fixed64 fixed64Test = 13;
    sfixed32 sfixed32Test = 14;
    sfixed64 sfixed64Test = 15;

    // skipped primitives
    string str_skipped = 16 [(extproto.skip_hashing) = true];
    uint32 int_skipped = 17 [(extproto.skip_hashing) = true];

}

enum Test {
    HELLO = 0;
    WORLD = 1;
}

message Nested {
    Simple simple = 1;

    google.protobuf.Struct details = 5;

    Test test = 2;

    Empty empty = 3;

    repeated string hello = 4;

    Simple skipper = 6 [(extproto.skip_hashing) = true];

    repeated Simple x = 7;

    map<string, Simple> initial = 9;

    Empty emptyNonNullable = 10 [(gogoproto.nullable) = false];
}


message Empty {
}